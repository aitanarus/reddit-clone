@page "/RadzenNavMenu"
@using Contracts.Interfaces
@using System.Security.Claims

@inject NavigationManager navMgr
@inject IAuthService authService

<div class="container">
    <div class="row">
        <div class="col-sm" style ="margin-top: 15px;">
            <div>
               <h1>Reddit?</h1> 
            </div>
        </div>
        <div class="col-sm">
            <LoginButtons></LoginButtons>
        </div>
    </div>
</div>

<RadzenCard Style="margin-bottom: 15px; width: fit-content; min-width: 100%; align-items: center;">
    <RadzenMenu>
        <RadzenMenuItem Click="OnAllPostsClicked" Text="All Posts" Icon="home"> </RadzenMenuItem>
        <RadzenMenuItem Click="OnNewPostClicked" Text="New Post" Icon="description"></RadzenMenuItem>
        <RadzenMenuItem Click="OnMyPostsClicked" Text="My Posts" Icon="description"></RadzenMenuItem>
    </RadzenMenu>
</RadzenCard>

@code {
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private string? name;
    private IEnumerable<Claim>? userClaims;

    void OnAllPostsClicked(MenuItemEventArgs args)
    {
        navMgr.NavigateTo("/posts");
    }

    void OnNewPostClicked(MenuItemEventArgs args)
    {
        navMgr.NavigateTo("/newpost");
    }

    private async Task OnMyPostsClicked()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;

        userClaims = user.Claims;
        name = user.Identity!.Name!;
        
        navMgr.NavigateTo("/myposts/{item.Id}");
    }

}